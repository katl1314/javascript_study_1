/**
 * 실행 컨텍스트
 * 소스코드 4가지
 * 1. 전역코드 : 전역에 존재하는 코드, 전역에 정의된 함수, 클래스 등 내부 코드는 포함되지 않는다. (전역 실행 컨텍스트)
 * 2. 함수코드 : 함수 내부에 존재하는 코드, 함수 내부에 중첩된 함수, 클래스 등의 내부코드는 포함되지 않는다. (함수 실행 컨텍스트)
 * 3. eval코드 : 빌트인 전역 함수인 eval 함수에 인수로 전달되어 실행되는 소스코드 (eval 실행 컨텍스트)
 * 4. 모듈코드 : 모듈 내부에 존재하는 소스코드, 모듈 내부 함수, 클래스 등의 내부코드는 포함되지 않는다. (모듈 실행 컨텍스트)
 */

/* const x = 1;
const y = 1;

// 함수 선언
function foo(a) {
    const x = 10;
    const y = 20;

    console.log(x, y);
}

foo(100);   // 함수 호출

// 메서드 호출
console.log(x, y); */

const x = 1;

function foo() {
    const y = 2;
    function bar() {
        const z = 3;
        console.log(x + y + z);
    }

    bar();
}
foo();
// 실행 컨텍스트는 스택 자료구조로 관리한다.
// 전역 실행 컨텍스트
// 전역 실행 컨텍스트, foo함수 실행 컨텍스트
// 전역 실행 컨텍스트, foo함수 실행 컨텍스트, bar함수 실행 컨텍스트
// 전역 실행 컨텍스트, foo함수 실행 컨텍스트
// 전역 실행 컨텍스트

/**
 * 렉시컬 환경
 * 식별자와 식별자에 바인딩된 값, 그리고 상위 스코프에 대한 참조를 기록하는 자료구조로, 실행 컨텍스트를 구성하는 컴포넌트
 * 실행 컨텍스트는 Lexical Environment, Variable Environment로 구성됨
 * 생성 초기에 렉시컬 환경컴포넌트와 var en은 하나의 동일한 렉시컬 환경을 참고한다.
 * 이후는 상황에 따라 달라진다.
 * 렉시컬 환경에는 환경 레코드(environment recode와 outer lexical Environment Reference)로 구성됨.
 * 환경 레코드는 식별자를 등록하고 식별자에 바인딩된 값을 관리함. Object
 * 외부 렉시컬 환경에 대한 참조 : 상위 스코프를 참고 -> 단방향 링크드 리스트인 스코프 체인을 구현함.
 */